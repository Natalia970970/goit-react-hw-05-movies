{"version":3,"file":"static/js/376.00162ec0.chunk.js","mappings":"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","sources":["API/API.js","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/pages/MovieDetails/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const API_KEY = `c7932d4433e8fee3124d33f1c9b27082`;\n\nexport const fetchTrandingMovies = () => {\n    return fetch(\n        `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    ).then(response => response.json());\n};\n\nexport const fetchMovieById = id => {\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    ).then(response => response.json());\n};\n\nexport const fetchCastById = id => {\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    ).then(response => response.json());\n};\n\nexport const fetchReviewsById = id => {\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    ).then(response => response.json());\n};\n\nexport const fetchMoviesByQuery = query => {\n    return fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    ).then(response => response.json());\n};","import styled from \"styled-components\";\n\nexport const MovieBox = styled.div`\n    padding-top: 20px;\n    padding-bottom: 5px;\n    display: flex;\n    gap: 20px;\n    border-bottom: 1px solid gray;\n`;\nexport const InfoBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n`;\nexport const AdditionalBox = styled.div`\n    border-bottom: 1px solid #000;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useParams } from \"react-router-dom\";\nimport { MovieBox, InfoBox, AdditionalBox } from './MovieInfo.styled';\n\nexport const MovieInfo = ({movieData}) => {\n    const { poster_path, original_title, vote_average, overview, genres } = movieData;\n    const posterUrl = `https://image.tmdb.org/t/p/w200${poster_path}`;\n    const genresList = genres.map(genre => genre.name).join(` `);\n    const { movieId } = useParams();\n\n\n    return (\n        <><MovieBox>\n            <img src={posterUrl} alt={original_title} />\n            <InfoBox>\n                <h2>{original_title}</h2>\n                <p>User Score: {Math.round(vote_average * 10)}%</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <p>{genresList}</p>\n            </InfoBox>\n        </MovieBox>\n        <AdditionalBox>\n            Additional information\n            <ul>\n                <li>\n                    <Link\n                        to={`/movies/${movieId}/cast`}\n                    >\n                        Cast\n                    </Link>\n                </li>\n                <li>\n                    <Link\n                        to={`/movies/${movieId}/reviews`}\n                    >\n                        Reviews\n                    </Link>\n                </li>\n            </ul>\n        </AdditionalBox></>\n    )\n};\n\nMovieInfo.propTypes = {\n    data: PropTypes.shape({\n        poster_path: PropTypes.string.isRequired,\n        original_title: PropTypes.string.isRequired,\n        vote_average: PropTypes.number.isRequired,\n        overview: PropTypes.string.isRequired,\n        genres: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string.isRequired,\n        })\n    ),\n    }),\n};","import { useState, useEffect, Suspense } from \"react\";\nimport { useParams, Outlet, useLocation, Link} from \"react-router-dom\";\nimport { fetchMovieById } from \"../../../API/API\"\nimport { MovieInfo } from \"../../../components/MovieInfo/MovieInfo\"\n\nconst MovieDetails = () => {\n    const [movieData, setMovieData] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const { movieId } = useParams();\n    const location = useLocation();\n\n    useEffect(() => {\n        async function fetchMovie() {\n            try {\n                setIsLoading(true);\n                const result = await fetchMovieById(movieId);\n                setMovieData(result);\n            } catch (error) {\n                console.log(error);\n                return alert(`Sorry, please try again`);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        fetchMovie();\n    }, [movieId]);\n\n    return (\n        <div>\n            <Link to={location.state?.from ?? '/'}>\n                Go back\n            </Link>\n            {isLoading && <div>...Loading</div>}\n            {movieData && <MovieInfo movieData={movieData} />}\n            <Suspense fallback={<div>...Loading</div>}>\n            <Outlet />\n            </Suspense>\n        </div>\n    );\n};\n\nexport default MovieDetails;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","fetchTrandingMovies","fetch","then","response","json","fetchMovieById","id","fetchCastById","fetchReviewsById","fetchMoviesByQuery","query","MovieBox","styled","InfoBox","AdditionalBox","MovieInfo","movieData","poster_path","original_title","vote_average","overview","genres","posterUrl","genresList","map","genre","name","join","movieId","useParams","src","alt","Math","round","to","useState","setMovieData","isLoading","setIsLoading","location","useLocation","useEffect","result","console","log","alert","fetchMovie","state","from","Suspense","fallback","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}
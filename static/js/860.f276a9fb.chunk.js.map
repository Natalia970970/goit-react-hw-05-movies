{"version":3,"file":"static/js/860.f276a9fb.chunk.js","mappings":"uQAAA,IAAMA,EAAO,mCAEAC,EAAsB,WAC/B,OAAOC,MAAM,2DAAD,OACmDF,IAC7DG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAClB,EAEYC,EAAiB,SAAAC,GAC1B,OAAOL,MAAM,sCAAD,OAC8BK,EAD9B,oBAC4CP,EAD5C,oBAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAClB,EAEYG,EAAgB,SAAAD,GACzB,OAAOL,MAAM,sCAAD,OAC8BK,EAD9B,4BACoDP,EADpD,oBAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAClB,EAEYI,EAAmB,SAAAF,GAC5B,OAAOL,MAAM,sCAAD,OAC8BK,EAD9B,4BACoDP,EADpD,oBAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAClB,EAEYK,EAAqB,SAAAC,GAC9B,OAAOT,MAAM,qDAAD,OAC6CF,EAD7C,iCAC6EW,EAD7E,gCAEVR,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAClB,C,sFC5BYO,E,OAAYC,GAAAA,GAAH,+G,SCETC,EAAa,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAClBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACL,EAAD,UACKG,EAAeG,KAAI,SAAAC,GAAK,OACrB,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAMZ,IAAMc,MAAO,CAAEC,KAAMN,GAAhD,SACKG,EAAMI,SAFNJ,EAAMZ,GADM,KASpC,C,yGCgBD,UA9Ba,WACT,OAA4CiB,EAAAA,EAAAA,UAAS,MAArD,eAAOT,EAAP,KAAuBU,EAAvB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,sGAEID,GAAa,GAFjB,UAG8B1B,EAAAA,EAAAA,MAH9B,gBAGY4B,EAHZ,EAGYA,QACRJ,EAAkBI,GAJtB,uDAMIC,QAAQC,IAAR,MANJ,kBAOWC,MAAM,4BAPjB,yBASIL,GAAa,GATjB,6EADY,uBAAC,WAAD,wBAcZM,EACH,GAAE,KAGC,4BACI,2CACCP,IAAa,wCACbX,IAAkB,SAAC,IAAD,CAAYA,eAAgBA,MAG1D,C,sBChCD,SAASmB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOxC,KAAKmC,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["API/API.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/pages/Home/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const API_KEY = `c7932d4433e8fee3124d33f1c9b27082`;\n\nexport const fetchTrandingMovies = () => {\n    return fetch(\n        `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    ).then(response => response.json());\n};\n\nexport const fetchMovieById = id => {\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    ).then(response => response.json());\n};\n\nexport const fetchCastById = id => {\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    ).then(response => response.json());\n};\n\nexport const fetchReviewsById = id => {\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    ).then(response => response.json());\n};\n\nexport const fetchMoviesByQuery = query => {\n    return fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    ).then(response => response.json());\n};","import styled from \"styled-components\";\n\nexport const MovieList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    list-style: none;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { MovieList } from './MoviesList.styled';\n\nexport const MoviesList = ({trandingMovies}) => {\n    const location = useLocation();\n\n    return (\n        <MovieList>\n            {trandingMovies.map(movie => (\n                <li key={movie.id}>\n                    <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                        {movie.title}\n                    </Link>\n                </li>\n            ))}\n        </MovieList>\n    )\n};\n\nMoviesList.propTypes = {\n    trandingMovies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n        })\n    ),\n};","import { useState, useEffect } from \"react\";\nimport { fetchTrandingMovies } from \"../../../API/API\"\nimport { MoviesList } from \"../../../components/MoviesList/MoviesList\"\n\nconst Home = () => {\n    const [trandingMovies, setTrandingMovies] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        async function fetchData() {\n        try {\n            setIsLoading(true);\n            const { results } = await fetchTrandingMovies();\n            setTrandingMovies(results);\n        } catch (error) {\n            console.log(error);\n            return alert(`Sorry, please try again`);\n        } finally {\n            setIsLoading(false);\n        }\n    }\n\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            <h2>Trending today</h2>\n            {isLoading && <div>...Loading</div>}\n            {trandingMovies && <MoviesList trandingMovies={trandingMovies} />}\n        </div>\n        );\n}\n\nexport default Home;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","fetchTrandingMovies","fetch","then","response","json","fetchMovieById","id","fetchCastById","fetchReviewsById","fetchMoviesByQuery","query","MovieList","styled","MoviesList","trandingMovies","location","useLocation","map","movie","to","state","from","title","useState","setTrandingMovies","isLoading","setIsLoading","useEffect","results","console","log","alert","fetchData","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}